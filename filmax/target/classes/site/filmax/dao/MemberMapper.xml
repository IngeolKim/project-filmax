<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="site.filmax.dao.MemberMapper">
	
	<!-- 로그인시 아이디체크 -->
    <select id="idCount" resultType="int" parameterType="site.filmax.dto.MemberDTO" >
    	select count(*) from member where user_id=#{user_id} and user_pw=#{user_pw} and levels != 80
    </select>
    
    <!-- 회원가입 -->
 	<insert id="Join" parameterType="site.filmax.dto.MemberDTO">
 		insert into member(user_no,user_id,user_pw,user_pwd,name,gender,birth,phone,email,levels,joindate,marketing)
 		 values(member_seq.nextval,#{user_id},#{user_pw},#{user_pwd},#{name},#{gender},#{birth},#{phone},#{email},1,sysdate,#{marketing})
 	</insert>
 	<!-- 아이디 중복체크 -->
 	<select id="idCheck" resultType="int" parameterType="String">
 		select count(*) from member where user_id=#{user_id}
 	</select>
 	<!-- 이메일 중복체크 -->
 	<select id="emailCheck" resultType="int" parameterType="String">
 		select count(*) from member where email=#{email}
 	</select>
 	<!-- 닉네임 중복체크 -->
 	<select id="nicknameCheck" resultType="int" parameterType="String">
 		select count(*) from member where nickname=#{nickname}
 	</select>
 	<!-- 아이디 찾기 -->
 	<select id="findId" resultType="String" parameterType="site.filmax.dto.MemberDTO">
 		select user_id from member where name=#{name} and birth=#{birth} and phone=#{phone}
 	</select>
 	<!-- 비밀번호찾기-->
 	<select id="findPw" resultType="String" parameterType="site.filmax.dto.MemberDTO">
 		select user_pw from member where  user_id=#{user_id} and name=#{name} and phone=#{phone}
 	</select>
 	<!-- 회원탈퇴시 레벨변경 -->
 	<update id="levelChange">
 		update member set levels = #{levels} where user_id = #{user_id}
 	</update>
 	<!-- 레벨이름변경 -->
 	<select id="levelsNameCh" resultType="String">
 		select name from member where levels =#{levels}
 	</select>
 	<!-- 회원  -->
 	<select id="update" resultType="site.filmax.dto.MemberDTO" parameterType="String">
 		select * from member where user_id = #{user_id}
 	</select>
 	<!-- 회원정보 수정 -->
	<update id="updateMember" parameterType="site.filmax.dto.MemberDTO">
		update member set user_pw=#{user_pwd},user_pwd=#{user_pwd},phone=#{phone},email=#{email},gender=#{gender},marketing=#{marketing} where user_id=#{user_id}
	</update>
	<!-- 로그인 시간 -->
 	<update id="loginTime">
		update member set lastlogin=sysdate where user_id=#{user_id}
	</update>
	
	<!-- 닉네임, 프로필 사진 수정 -->
	<update id="profileEdit" parameterType="site.filmax.dto.MemberDTO">
		update member set nickname=#{nickname}, profile=#{profile} where user_id=#{user_id}
	</update>
	
 	<!-- 회원확인 -->
 	<select id="getMember" resultType="site.filmax.dto.MemberDTO" parameterType="String">
 		select * from member m, levels s where m.levels=s.levels and user_id=#{user_id}
 	</select>
	
	<!-- 내쿠폰함 -->
	<select id="myCouponList" resultType="site.filmax.dto.CouponDTO" parameterType="String">
		select c.num, t.name, t.info, t.sale, c.use, c.usetime from coupon c, coupon_type t
				where user_id=#{user_id} and c.type = t.type
	</select>
	
	<!-- 쿠폰검색 -->
	<select id="searchCouponList" resultType="site.filmax.dto.CouponDTO">
		select c.num, c.user_id, t.name, t.info, t.sale, c.use, c.usetime
			from coupon c, coupon_type t
				where t.type = c.type and ${search} like '%'||#{searchValue}||'%'
					order by c.num desc
	</select>
	
	<!-- 회원아이디로 쿠폰목록검색 -->
	<select id="coupon_id" resultType="site.filmax.dto.CouponDTO" parameterType="site.filmax.dto.MemberDTO">
		select * 
			from coupon c, coupon_type t
				where user_id=#{idCoupon} and c.type = t.type
	</select>

    <!-- 내쿠폰 갯수표시 -->
    <select id="couponCount" resultType="int" parameterType="String">
    	select count(*) from coupon where user_id=#{user_id} and use='n'
    </select>
    <!-- 내포인트 표시 / 아이디의 마지막행 최종포인트 -->
    <select id="pointCount" resultType="int" parameterType="String">
    	select nvl(avg(totalpoint),0) totalpoint from(select * from point order by rownum desc) where user_id=#{user_id} and rownum=1
    </select>
    
	<!-- 회원아이디로 포인트목록검색 -->
	<select id="point_id" resultType="site.filmax.dto.PointDTO" parameterType="site.filmax.dto.MemberDTO">
		select *
    		from point p, pointname pn
    			where user_id=#{user_id} and p.pointnum = pn.pointnum
	</select>
	<!-- 내포인트목록 -->
	<select id="myPointList" resultType="site.filmax.dto.PointDTO">
		select p.num, p.pointnum, pn.pointinfo, p.user_id, p.pluspoint, p.usepoint, p.totalpoint, p.usedate
    from point p, pointname pn where user_id=#{user_id} and p.pointnum = pn.pointnum
	</select>
    
    <!-- 비회원 등록확인 생년월일,연락처,비밀번호 동일한지 확인 -->
    <select id="guestIdCount" resultType="int" parameterType="site.filmax.dto.MemberDTO">
    	select count(*) from guest where birth=#{birth} and phone=#{phone} and password=#{password}
    </select>
    
    <!-- 비회원 연락처 확인 -->
    <select id="guestIdCheck" resultType="int" parameterType="String">
    	select count(*) from guest where phone=#{phone}
    </select>
	
    <!-- 비회원 비밀번호 확인 -->
    <select id="guestPwCheck" resultType="int" parameterType="String">
    	select count(*) from guest where phone=#{password}
    </select>
    
    <!-- 비회원 예매등록(회원가입) -->
    <insert id="guestInput" parameterType="site.filmax.dto.GuestDTO">
    	insert into guest values(#{ruleagree}, #{birth}, #{phone}, #{password}, #{password_check}, sysdate)
    </insert>
    
    
    <!-- 회원가입후 포인트지급 -->
    <insert id="joinPoint" parameterType="site.filmax.dto.MemberDTO">
    	insert into point values(point_seq.nextval, 1, #{user_id}, '3000', '0', '5000', sysdate, null)
    </insert>
    
    <!-- 포인트 업데이트 -->
    <insert id="pointUpdate" parameterType="site.filmax.dto.MemberDTO">
    	insert into point values(point_seq.nextval, #{pointnum}, #{user_id}, #{pluspoint}, #{usepoint}
    		(select totalpoint from(select * from point order by rownum desc) where user_id=#{user_id} and rownum=1) + #{pluspoint} - #{usepoint},
    			sysdate, null)
    </insert>
    
    
    
</mapper>



